cmd
cd C:\Users\Live\Documents\roboflow_soccer

- - -

> ambiente virtual

instalar
virtualenv venv

subir 
.\venv\Scripts\Activate 

criar
python -m venv venv

baixar
deactivate

Instalar depend√™ncias b√°sicas
pip install flask python-dotenv

Rodar o servidor
flask run
ou
python app.py


- - -

subir aplicacao
flask --app app run --debug

video tutorial para subir na digital ocean
https://www.youtube.com/watch?v=mCXJV7aDAnk

comando para deploy
gunicorn --worker-tmp-dir /dev/shm app:app

url temporaria
https://orca-app-2-lv27x.ondigitalocean.app/


- - -

gitHub
git add .
git commit - m "commite explicacao"
git push

desfazer gitHub
add: git reset
commit: git reset --soft HEAD~1 (somente o commit) ou git reset --mixed HEAD~1 (commit e add)
forcar push: git push --force


digital ocean - commands 

Build Command
None

Run Command
gunicorn --worker-tmp-dir /dev/shm app:app


- - -

> requirements.txt

criar
pip freeze > requirements.txt

instalar dependencias a partir de requirements.txt
pip install -r requirements.txt --force-reinstall


deactivate


- - -

lista os arquivos filtrando pelos maiores
dir /s /b /o-s | findstr /R "^.* [0-9][0-9]* " | more


Sugest√µes r√°pidas pra evitar dor de cabe√ßa no futuro:

Congele o ambiente atual:

pip freeze | Out-File -Encoding utf8 requirements.txt


(Opcional) Reproduza em outra m√°quina:

python -m venv .venv ; .\.venv\Scripts\Activate.ps1 ; pip install -r requirements.txt


Checar conflitos sempre que atualizar algo:

pip install -U <pacote> ; pip check


Se um pacote ‚Äúpuxar‚Äù upgrades indesejados, instale com constraint:

pip install -r requirements.txt -c requirements.txt


üîπ Passo a passo
1. Crie um reposit√≥rio no GitHub

V√° em https://github.com/new

D√™ um nome para o reposit√≥rio (ex.: football-tracking)

Escolha p√∫blico ou privado

N√ÉO adicione README, .gitignore ou LICENSE (vamos criar localmente).

2. Dentro da sua pasta do projeto

No terminal:

# inicializa o git
git init

# adiciona o reposit√≥rio remoto (troque pela URL do seu repo)
git remote add origin https://github.com/seu-usuario/football-tracking.git

3. Crie um .gitignore

Para n√£o subir a virtualenv e arquivos desnecess√°rios:

echo "venv/
__pycache__/
*.pyc
*.pyo
*.pyd
*.db
*.sqlite3
.env
*.mp4
*.avi
*.mkv
" > .gitignore


Isso garante que sua pasta venv/ e os v√≠deos n√£o sejam enviados ao GitHub.

4. Crie um requirements.txt

Assim quem clonar pode instalar as libs certas:

pip freeze > requirements.txt

5. Adicione e fa√ßa o primeiro commit
git add .
git commit -m "primeiro commit - c√≥digo de tracking de jogadores e keypoints"

6. Suba para o GitHub
git branch -M main
git push -u origin main